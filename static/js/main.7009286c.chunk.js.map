{"version":3,"sources":["Ingredients.js","Friend.js","App.js","serviceWorker.js","index.js"],"names":["Ingredients","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createList","bind","assertThisInitialized","clickBlock","e","id","name","own","props","deleteMode","removeIngredient","updateQueue","addIngredient","ingredient","_this2","chosenStyle","chosen","border","react_default","a","createElement","className","key","concat","onClick","style","_this3","listArr","ingredients","listArr2","friendIngredients","listArrRender","map","x","listArrRender2","removeButtonStyle","userIngredientsListStyle","clickAdd","changeDeleteMode","Component","Friend","removeFriend","addFriend","friend","clickNew","friends","App","state","queue","user","users","userAlert","count","inputUser","onRecieveUser","hideUserAlert","fetchIngredients","updateRecipe","onRecieveFriend","onRecieveIngredient","apiUrl","response","status","error","Error","statusText","setState","react_bootstrap_sweetalert_default","input","showCancel","title","required","validationMsg","onConfirm","onCancel","hideAlert","value","success","q","ing","friendIng","i","length","push","unshift","index","indexOf","splice","console","log","assign","pop","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","checkStatus","json","resObj","data","own_ingredients","friends_ingredients","catch","recipeList","_this4","_this5","d","src_Friend","src_Ingredients","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7009286c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Ingredients extends Component {\n  constructor(){\n    super();\n    this.createList = this.createList.bind(this);\n    this.clickBlock=this.clickBlock.bind(this);\n  }\n  clickBlock(e,id,name,own){\n    //console.log(name)\n    if(this.props.deleteMode){\n      if(own===true)\n        this.props.removeIngredient(name);}\n    else\n      this.props.updateQueue(name);\n  }\n  clickAdd(){\n    this.props.addIngredient();\n  }\n  createList(ingredient, own){\n    let blockType = \"ingredient-block-container\"\n    var chosenStyle = (ingredient.chosen)? {border:\"4px solid #3d3d3d\"} : {border:\"0px solid #3d3d3d\"};\n    return (\n        <div \n          className={blockType} \n          key={`ingredient-${ingredient.name}`} \n          onClick={(e)=>{this.clickBlock(e,ingredient.id, ingredient.name, own)}}>        \n          <div className=\"ingredient-block\" style={chosenStyle}> \n            <div className=\"ingredient-block-name\">\n              {ingredient.name}\n            </div>\n          </div>\n        </div>\n      )\n  }\n  render() {\n    let listArr = this.props.ingredients;\n    let listArr2 = this.props.friendIngredients;\n    var listArrRender = listArr.map(x=>this.createList(x,true));\n    var listArrRender2 = listArr2.map(x=>this.createList(x,false));\n    let removeButtonStyle = (this.props.deleteMode)? \"remove-ingredient-clicked\" : \"remove-ingredient\";\n    let userIngredientsListStyle = (this.props.deleteMode)? {border: \"3px solid #c20616\"} : {};\n    //console.log(this.props.deleteMode);\n    //console.log(removeButtonStyle);\n    return (\n        <div>\n          <div className=\"ingredient-console\">\n            <div className=\"add-ingredient\" onClick={(e)=>this.clickAdd()}>\n              Add ingredient\n            </div>\n            <div className= {removeButtonStyle} onClick={(e)=>this.props.changeDeleteMode()}>\n              Remove ingredient\n            </div>\n          </div>\n          <div className=\"user-ingredients-list\" style={userIngredientsListStyle}>\n            <div>\n              Your ingredients:\n            </div>\n            {listArrRender}\n          </div>\n          <div className=\"friend-ingredients-list\">\n            <div>\n              Friends' ingredients:\n            </div>\n            {listArrRender2}\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Ingredients;","import React, { Component } from 'react';\nclass Friend extends Component {\n  constructor(){\n    super();\n    this.createList = this.createList.bind(this);\n    this.clickBlock=this.clickBlock.bind(this);\n  }\n  clickBlock(name){ \n    this.props.removeFriend(name);\n  }\n  clickNew(){\n    this.props.addFriend();\n  }\n  createList(friend){\n    let blockType = \"friend-block-container\"\n    if (friend===\"New Friend\"){\n      return (\n        <div \n          className=\"new-block-container\"\n          key={`new-${friend}`} \n          onClick={(e)=>{this.clickNew()}}>        \n          <div className=\"friend-block\"> \n            {friend}\n          </div>\n        </div>\n      );\n    }\n    else{\n      return (\n        <div \n          className={blockType} \n          key={`friend-${friend}`} \n          onClick={(e)=>{this.clickBlock(friend)}}>        \n          <div className=\"friend-block\"> \n            {friend}\n          </div>\n        </div>\n      );\n    }\n    \n  }\n  render() {\n    var listArr = this.props.friends;\n    var listArrRender = listArr.map(this.createList);\n    return (\n        <div>\n          <div className=\"cooking-with-title\">\n            Cooking with:\n          </div>\n            {listArrRender}\n        </div>\n    );\n  }\n}\n\nexport default Friend;","import React, { Component } from 'react';\nimport Ingredients from './Ingredients.js';\nimport Friend from './Friend.js'\nimport './App.css';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      ingredients:[],\n      friendIngredients:[],\n      queue:[],\n      user: '',\n      users: ['New Friend'],\n      userAlert: null,\n      count: 0,\n      deleteMode: false,\n    }\n    this.inputUser = this.inputUser.bind(this);\n    this.onRecieveUser = this.onRecieveUser.bind(this);\n    \n    this.hideUserAlert = this.hideUserAlert.bind(this);\n    this.fetchIngredients = this.fetchIngredients.bind(this);\n    this.updateQueue = this.updateQueue.bind(this);\n    this.updateRecipe = this.updateRecipe.bind(this);\n\n    this.addFriend = this.addFriend.bind(this);\n    this.onRecieveFriend = this.onRecieveFriend.bind(this);\n    this.removeFriend = this.removeFriend.bind(this);\n\n    this.addIngredient = this.addIngredient.bind(this);\n    this.onRecieveIngredient = this.onRecieveIngredient.bind(this);\n    this.removeIngredient = this.removeIngredient.bind(this);\n    this.changeDeleteMode = this.changeDeleteMode.bind(this);\n\n    this.apiUrl=\"http://18.220.42.114:8000/\";\n  }\n  componentDidMount(){\n    this.inputUser();\n    \n    //this.fetchIngredients();\n  }\n  checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n\n  inputUser(){\n    this.setState({userAlert:(<SweetAlert\n      input\n      showCancel\n      title=\"Name\"\n      required\n      validationMsg=\"You must enter your name!\"\n      onConfirm={this.onRecieveUser}\n      onCancel={this.hideAlert}\n      />)\n    });\n  }\n  onRecieveUser(value){\n    this.setState({user:value, userAlert:(<SweetAlert\n      success\n      title=\"Finish\"\n      onConfirm={this.hideUserAlert}\n    />)});\n  }\n  \n\n  hideUserAlert(){\n    this.setState({userAlert:null},this.fetchIngredients);\n  }\n  updateQueue(name){\n    let q = []\n    let ing = this.state.ingredients;\n    let friendIng = this.state.friendIngredients;\n    for(let i=0; i<ing.length; ++i){\n      if(ing[i].name===name){\n        ing[i].chosen=!ing[i].chosen;\n        break;\n      }\n    }\n    //console.log(name)\n    for(let i=0; i<ing.length; ++i){\n      if(ing[i].chosen)\n        q.push(ing[i].name)\n    }\n\n    for(let i=0; i<friendIng.length; ++i){\n      if(friendIng[i].name===name){\n        friendIng[i].chosen=!friendIng[i].chosen;\n        break;\n      }\n    }\n    for(let i=0; i<friendIng.length; ++i){\n      if(friendIng[i].chosen)\n        q.push(friendIng[i].name)\n    }\n\n    this.setState({queue:q, ingredients:ing, fetchIngredients:friendIng}, ()=>{this.updateRecipe()});\n  }\n  addFriend(){\n    this.setState({userAlert:(<SweetAlert\n      input\n      showCancel\n      title=\"You are cooking with:\"\n      required\n      validationMsg=\"You must enter your friend!\"\n      onConfirm={this.onRecieveFriend}\n      onCancel={this.hideAlert}\n      />)\n    });\n  }\n  onRecieveFriend(value){\n    let users = this.state.users;\n    users.unshift(value)\n    this.setState({users, userAlert:(<SweetAlert\n      success\n      title=\"Finish\"\n      onConfirm={this.hideUserAlert}\n    />)},this.fetchIngredients());\n  }\n  removeFriend(name){\n    let users = this.state.users;\n    var index = users.indexOf(name);\n    users.splice(index,1)\n    this.setState({users,},this.fetchIngredients());\n  }\n  updateRecipe(){\n    console.log('update the recipe and sent to the server');\n    console.log(this.state.queue);\n  }\n  fetchIngredients(){\n    var friends= Object.assign([],this.state.users);\n    friends.pop()\n    fetch(`${this.apiUrl}queryIngredients`, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"user\":this.state.user,\n        \"friends\":friends,\n      }),\n    }).then(this.checkStatus)\n    .then(response=>response.json())\n    .then(resObj=>{\n      console.log((resObj.data).own_ingredients)\n      this.setState({ingredients:(resObj.data).own_ingredients, friendIngredients:(resObj.data).friends_ingredients});\n    })\n    .catch(error=>{\n        console.log('get list fail...')\n        console.log(error);\n        this.setState({\n          recipeList: []\n      })\n    });\n    \n    /*\n    let data = [{\n      name: \"egg\",\n      chosen: false\n    }, {\n      name: \"ham\",\n      chosen: false\n    }]\n    let data2 = [{\n      name: \"toast\",\n      chosen: false\n    }, {\n      name: \"milk\",\n      chosen: false\n    }]\n    \n    this.setState({ingredients:data,friendIngredients:data2});\n    */\n  }\n\n\n  //ingredients:\n  addIngredient(){\n    console.log(\"add ingredient\");\n    this.setState({userAlert:(<SweetAlert\n      input\n      showCancel\n      title=\"Add ingredient:\"\n      required\n      validationMsg=\"You must enter ingredient!\"\n      onConfirm={this.onRecieveIngredient}\n      onCancel={this.hideAlert}\n      />)\n    });\n  }\n  onRecieveIngredient(value){\n    let ingredients = [];\n    ingredients.push(value)\n    fetch(`${this.apiUrl}insertIngredients`, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"user\":this.state.user,\n        \"ingredients\":ingredients,\n      }),\n    }).then(this.checkStatus)\n    .then(response=>response.json())\n    .then(resObj=>{\n      this.setState({userAlert:(<SweetAlert\n        success\n        title=\"Finish\"\n        onConfirm={this.hideUserAlert}\n      />)},()=>{this.fetchIngredients()});\n    })\n    .catch(error=>{\n        console.log('get list fail...')\n        console.log(error);\n        this.setState({\n          recipeList: []\n      })\n    });\n  }\n  removeIngredient(name){\n    let ingredients = [];\n    ingredients.push(name)\n    fetch(`${this.apiUrl}deleteIngredients`, {\n      method: 'delete',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"user\":this.state.user,\n        \"ingredients\":ingredients,\n      }),\n    }).then(this.checkStatus)\n    .then(response=>response.json())\n    .then(resObj=>{\n      this.fetchIngredients();\n    })\n    .catch(error=>{\n      console.log('get list fail...')\n      console.log(error);\n    });\n  }\n  changeDeleteMode(){\n    let d = this.state.deleteMode;\n    this.setState({deleteMode:!d});\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Overcooked\n          <div className=\"App-header-welcomeuser\">\n            Welcome, {this.state.user}\n          </div>\n        </header>\n        {this.state.userAlert}\n        <div className=\"cooking-with\">\n\n          <Friend\n            friends = {this.state.users}\n            removeFriend = {this.removeFriend}\n            addFriend = {this.addFriend}\n          >\n          </Friend>\n        </div>\n        <div className=\"main-body\">\n          <div className=\"ingredients\">\n            <div>\n              <Ingredients\n                ingredients={this.state.ingredients}\n                deleteMode = {this.state.deleteMode}\n                friendIngredients={this.state.friendIngredients}\n                updateQueue={this.updateQueue}\n                addIngredient={this.addIngredient}\n                removeIngredient={this.removeIngredient}\n                changeDeleteMode = {this.changeDeleteMode}\n              ></Ingredients>\n            </div>\n          </div>\n          <div className=\"recipe\">\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}